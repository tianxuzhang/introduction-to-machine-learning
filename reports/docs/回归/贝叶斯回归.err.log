Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pymc3 as pm
import numpy as np

# 构造训练集
X = np.random.randn(100, 2)
w_true = np.array([3, 5])
y = X.dot(w_true) + np.random.randn(100)

# 创建贝叶斯模型
with pm.Model() as model:
    # 定义参数的先验分布
    w = pm.Normal('w', mu=0, sd=1, shape=2)
    sigma = pm.HalfNormal('sigma', sd=1)
    
    # 定义输出标签的条件分布
    y_obs = pm.Normal('y_obs', mu=pm.math.dot(X, w), sd=sigma, observed=y)
    
    # 进行后验推断
    trace = pm.sample(1000, tune=1000)

# 输出参数估计结果
print("参数估计结果：")
print(pm.summary(trace)['mean'])

# 进行预测
x_new = np.array([[1, 2], [3, 4]])  # 新的输入特征
with model:
    post_pred = pm.sample_posterior_predictive(trace, samples=1000, vars=[y_obs])
    y_pred_mean = np.mean(post_pred['y_obs'], axis=0)

print("预测结果：")
print(y_pred_mean)
------------------

----- stderr -----
/home/runner/.local/lib/python3.10/site-packages/theano/scalar/basic.py:2412: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  self.ctor = getattr(np, o_type.dtype)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mpymc3[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpm[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      4[0m [38;5;66;03m# 构造训练集[39;00m

File [0;32m~/.local/lib/python3.10/site-packages/pymc3/__init__.py:23[0m
[1;32m     20[0m [38;5;28;01mimport[39;00m [38;5;21;01mplatform[39;00m
[1;32m     22[0m [38;5;28;01mimport[39;00m [38;5;21;01msemver[39;00m
[0;32m---> 23[0m [38;5;28;01mimport[39;00m [38;5;21;01mtheano[39;00m
[1;32m     25[0m _log [38;5;241m=[39m logging[38;5;241m.[39mgetLogger([38;5;124m"[39m[38;5;124mpymc3[39m[38;5;124m"[39m)
[1;32m     27[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m logging[38;5;241m.[39mroot[38;5;241m.[39mhandlers:

File [0;32m~/.local/lib/python3.10/site-packages/theano/__init__.py:83[0m
[1;32m     75[0m [38;5;66;03m# This is the api version for ops that generate C code.  External ops[39;00m
[1;32m     76[0m [38;5;66;03m# might need manual changes if this number goes up.  An undefined[39;00m
[1;32m     77[0m [38;5;66;03m# __api_version__ can be understood to mean api version 0.[39;00m
[1;32m     78[0m [38;5;66;03m#[39;00m
[1;32m     79[0m [38;5;66;03m# This number is not tied to the release version and should change[39;00m
[1;32m     80[0m [38;5;66;03m# very rarely.[39;00m
[1;32m     81[0m __api_version__ [38;5;241m=[39m [38;5;241m1[39m
[0;32m---> 83[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtheano[39;00m [38;5;28;01mimport[39;00m scalar, tensor
[1;32m     84[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtheano[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcompile[39;00m [38;5;28;01mimport[39;00m (
[1;32m     85[0m     In,
[1;32m     86[0m     Mode,
[0;32m   (...)[0m
[1;32m     93[0m     shared,
[1;32m     94[0m )
[1;32m     95[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtheano[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcompile[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfunction[39;00m [38;5;28;01mimport[39;00m function, function_dump

File [0;32m~/.local/lib/python3.10/site-packages/theano/scalar/__init__.py:1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mbasic[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mbasic_scipy[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m

File [0;32m~/.local/lib/python3.10/site-packages/theano/scalar/basic.py:2460[0m
[1;32m   2456[0m         [38;5;28;01melse[39;00m:
[1;32m   2457[0m             [38;5;28;01mreturn[39;00m s
[0;32m-> 2460[0m convert_to_bool [38;5;241m=[39m [43mCast[49m[43m([49m[38;5;28;43mbool[39;49m[43m,[49m[43m [49m[43mname[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mconvert_to_bool[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m   2461[0m convert_to_int8 [38;5;241m=[39m Cast(int8, name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mconvert_to_int8[39m[38;5;124m"[39m)
[1;32m   2462[0m convert_to_int16 [38;5;241m=[39m Cast(int16, name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mconvert_to_int16[39m[38;5;124m"[39m)

File [0;32m~/.local/lib/python3.10/site-packages/theano/scalar/basic.py:2412[0m, in [0;36mCast.__init__[0;34m(self, o_type, name)[0m
[1;32m   2410[0m [38;5;28msuper[39m()[38;5;241m.[39m[38;5;21m__init__[39m(specific_out(o_type), name[38;5;241m=[39mname)
[1;32m   2411[0m [38;5;28mself[39m[38;5;241m.[39mo_type [38;5;241m=[39m o_type
[0;32m-> 2412[0m [38;5;28mself[39m[38;5;241m.[39mctor [38;5;241m=[39m [38;5;28;43mgetattr[39;49m[43m([49m[43mnp[49m[43m,[49m[43m [49m[43mo_type[49m[38;5;241;43m.[39;49m[43mdtype[49m[43m)[49m

File [0;32m~/.local/lib/python3.10/site-packages/numpy/__init__.py:324[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    319[0m     warnings[38;5;241m.[39mwarn(
[1;32m    320[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[1;32m    321[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    323[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[0;32m--> 324[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[1;32m    326[0m [38;5;28;01mif[39;00m attr [38;5;241m==[39m [38;5;124m'[39m[38;5;124mtesting[39m[38;5;124m'[39m:
[1;32m    327[0m     [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtesting[39;00m [38;5;28;01mas[39;00m [38;5;21;01mtesting[39;00m

[0;31mAttributeError[0m: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

