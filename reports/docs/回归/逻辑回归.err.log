Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.linear_model import LogisticRegression
import numpy as np

# 生成样本数据
np.random.seed(0)
n_samples, n_features = 100, 10
X = np.random.randn(n_samples, n_features)
y = np.random.randn(n_samples)  # 生成5个相关联的目标变量

# 创建逻辑回归模型
logistic_reg = LogisticRegression()

# 拟合模型
logistic_reg.fit(X, y)

# 输出参数估计结果
print("参数估计结果：")
print(logistic_reg.coef_)

# 进行预测
y_pred = logistic_reg.predict(X)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[1], line 14[0m
[1;32m     11[0m logistic_reg [38;5;241m=[39m LogisticRegression()
[1;32m     13[0m [38;5;66;03m# 拟合模型[39;00m
[0;32m---> 14[0m [43mlogistic_reg[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m)[49m
[1;32m     16[0m [38;5;66;03m# 输出参数估计结果[39;00m
[1;32m     17[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m参数估计结果：[39m[38;5;124m"[39m)

File [0;32m~/.local/lib/python3.10/site-packages/sklearn/base.py:1152[0m, in [0;36m_fit_context.<locals>.decorator.<locals>.wrapper[0;34m(estimator, *args, **kwargs)[0m
[1;32m   1145[0m     estimator[38;5;241m.[39m_validate_params()
[1;32m   1147[0m [38;5;28;01mwith[39;00m config_context(
[1;32m   1148[0m     skip_parameter_validation[38;5;241m=[39m(
[1;32m   1149[0m         prefer_skip_nested_validation [38;5;129;01mor[39;00m global_skip_validation
[1;32m   1150[0m     )
[1;32m   1151[0m ):
[0;32m-> 1152[0m     [38;5;28;01mreturn[39;00m [43mfit_method[49m[43m([49m[43mestimator[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:1216[0m, in [0;36mLogisticRegression.fit[0;34m(self, X, y, sample_weight)[0m
[1;32m   1206[0m     _dtype [38;5;241m=[39m [np[38;5;241m.[39mfloat64, np[38;5;241m.[39mfloat32]
[1;32m   1208[0m X, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_validate_data(
[1;32m   1209[0m     X,
[1;32m   1210[0m     y,
[0;32m   (...)[0m
[1;32m   1214[0m     accept_large_sparse[38;5;241m=[39msolver [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124mliblinear[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msag[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msaga[39m[38;5;124m"[39m],
[1;32m   1215[0m )
[0;32m-> 1216[0m [43mcheck_classification_targets[49m[43m([49m[43my[49m[43m)[49m
[1;32m   1217[0m [38;5;28mself[39m[38;5;241m.[39mclasses_ [38;5;241m=[39m np[38;5;241m.[39munique(y)
[1;32m   1219[0m multi_class [38;5;241m=[39m _check_multi_class([38;5;28mself[39m[38;5;241m.[39mmulti_class, solver, [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39mclasses_))

File [0;32m~/.local/lib/python3.10/site-packages/sklearn/utils/multiclass.py:216[0m, in [0;36mcheck_classification_targets[0;34m(y)[0m
[1;32m    208[0m y_type [38;5;241m=[39m type_of_target(y, input_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m)
[1;32m    209[0m [38;5;28;01mif[39;00m y_type [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [
[1;32m    210[0m     [38;5;124m"[39m[38;5;124mbinary[39m[38;5;124m"[39m,
[1;32m    211[0m     [38;5;124m"[39m[38;5;124mmulticlass[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m    214[0m     [38;5;124m"[39m[38;5;124mmultilabel-sequences[39m[38;5;124m"[39m,
[1;32m    215[0m ]:
[0;32m--> 216[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    217[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnknown label type: [39m[38;5;132;01m{[39;00my_type[38;5;132;01m}[39;00m[38;5;124m. Maybe you are trying to fit a [39m[38;5;124m"[39m
[1;32m    218[0m         [38;5;124m"[39m[38;5;124mclassifier, which expects discrete classes on a [39m[38;5;124m"[39m
[1;32m    219[0m         [38;5;124m"[39m[38;5;124mregression target with continuous values.[39m[38;5;124m"[39m
[1;32m    220[0m     )

[0;31mValueError[0m: Unknown label type: continuous. Maybe you are trying to fit a classifier, which expects discrete classes on a regression target with continuous values.

